pfc/urls.py 

# Lineas que ya no usaré
    #url(r'^accounts/login', 'django.contrib.auth.views.login'),
    #url(r'^accounts/logout','django.contrib.auth.views.logout'),
    #url(r'^accounts/login/$', 'pfc.views.login', name='login'),

pfc/views.py
# en el metodo loadUniversities
    #return index(request)


#en el metodo REGISTER
#            formulario para cuando cargamos una imagen
#            form = RegisterFOrm(request.POST, request.FILES)



pfc/views.py
#algunas lineas que me haran falta para editar el perfil de cada usuario
#               name = form.cleaned_data['name']
#               lastname = form.cleaned_data['lastname']
#               if (name=="") or (lastname==""):
#                   return HttpResponseRedirect('/accounts/invalid')


#               description = form.cleaned_data['description']
#               university = form.cleaned_data['university']
#               photo = form.cleaned_data['photo']


#               up = UserProfile(username=u, name=name, lastname=lastname, image=photo, university=university)
#               up.save()


# En el pie de los templates

      <footer>
        <!--<div><span style="float:right">PFC - <a href="http://gsyc.es" target="_blank" style="color: #424242">GSyC 2013</span> <a href="http://urjc.es" target="_blank" style="color: #424242"> URJC </a></div>-->
      </footer>



# LINEAS QUE QUIZAS SIRVAN PARA /TUERASMUS/VIEWS.PY



# LÍNEAS SIGUIENTES NO ME SIRVEN DE MOMENTO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#ACORDARME DE BORRARLAS!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#def index(request):
    # return HttpResponse("Hello, world. You're at the tuerasmus index.")

    # latest_poll_list = Poll.objects.order_by('-pub_date')[:5]
    # output = ', '.join([p.question for p in latest_poll_list])
    
#    output = ', '.join(u.login)
#    return HttpResponse(output)

#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------

def nuevo_user(request):
    if request.method=='POST':
        formulario = UserForm(request.POST, request.FILES)
        if formulario.is_valid():
            formulario.save()
            return HttpResponseRedirect('/index')
    else:
        formulario = UserForm()
    return render_to_response('userform.html', {'formulario': formulario}, context_instance=RequestContext(request))

def nuevo_city(request):
    if request.method=='POST':
        formulario = CityForm(request.POST)
        if formulario.is_valid():
            formulario.save()
            return HttpResponseRedirect('/index')
    else:
        formulario = CityForm()
    return render_to_response('cityform.html', {'formulario': formulario}, context_instance=RequestContext(request))

def register_user(request):
    form = RegisterForm()
    if request.method=="POST":
        form = RegisterForm(request.POST)
        if form.is_valid():
            usuario = form.cleaned_data['username']
            email = form.cleaned_data['email']
            password_one = form.cleaned_data['password_one']
            password_two = form.cleaned_data['password_two']
            u = User.objects.create_user(username = username, email = email, password = password_one)
            u.save()
            return render_to_response('registered.html', context_instance = RequestContext(request))
        else:
            ctx = {'form': form}
        return render_to_response('register.html', ctx, context_instance=RequestContext(request))
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
 
